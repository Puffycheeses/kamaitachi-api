import * as cluster from "cluster";
import * as os from "os";
import app from "./server";

if (cluster.isMaster) {
    console.log(`
        ██╗  ██╗ █████╗ ███╗   ███╗ █████╗ ██╗████████╗ █████╗  ██████╗██╗  ██╗██╗     ██╗ █████╗ ██████╗ ██╗██╗ 
        ██║ ██╔╝██╔══██╗████╗ ████║██╔══██╗██║╚══██╔══╝██╔══██╗██╔════╝██║  ██║██║    ██╔╝██╔══██╗██╔══██╗██║╚██╗
        █████╔╝ ███████║██╔████╔██║███████║██║   ██║   ███████║██║     ███████║██║    ██║ ███████║██████╔╝██║ ██║
        ██╔═██╗ ██╔══██║██║╚██╔╝██║██╔══██║██║   ██║   ██╔══██║██║     ██╔══██║██║    ██║ ██╔══██║██╔═══╝ ██║ ██║
        ██║  ██╗██║  ██║██║ ╚═╝ ██║██║  ██║██║   ██║   ██║  ██║╚██████╗██║  ██║██║    ╚██╗██║  ██║██║     ██║██╔╝
        ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝
    `);

    console.log(`Running in env: ${process.env.NODE_ENV}`);

    let cpuCount = os.cpus().length;

    console.log(`Running with ${cpuCount} CPUs, spawning ${cpuCount} servers.`);

    for (let i = 0; i < cpuCount; i++) {
        cluster.fork();
    }
} else {
    app.listen(8081);
}
